{"version":3,"file":"logger.umd.js","sources":["../src/index.js"],"sourcesContent":["import fs from 'fs'\r\nimport dayjs from 'dayjs'\r\n\r\nconst path = 'lib/logger'\r\n\r\nconst LEVELS ={TRACE:1, DEBUG:2, INFO:3, WARN:4, ERROR:5, OFF:99}//ALL < |TRACE < DEBUG < INFO < WARN < ERROR| < FATAL < MARK < OFF\r\n\r\nclass Logger{\r\n  break  =[]\r\n  level  =0\r\n  console={}\r\n  file   =false\r\n  name   =false\r\n  hideSecrets  =false\r\n\r\n  config({file, name='my logger', displayConsole=false, level=LEVELS.TRACE, hideSecrets=true}){\r\n    this.file   = file\r\n    this.name = name\r\n    this.console= {\r\n      display : displayConsole,\r\n      log     : console.log,\r\n      error   : console.error\r\n    }\r\n    this.level  = level\r\n    this.hideSecrets  = hideSecrets\r\n\t  //name = this\r\n  }\r\n\r\n  addBreak(break_){\r\n    this.break.push(break_)\r\n    this.info(path, 'addBreak', this.break)    \r\n  }\r\n\r\n  setName(name){\r\n    this.name = name\r\n  }\r\n\r\n  /*name(){\r\n    return this.file.substring(this.file.indexOf('data/')+5)\r\n  }*/\r\n\r\n  trace(...rest){\r\n    rest.unshift('TRACE')\r\n    this.log(rest)\r\n  }\r\n\r\n  debug(...rest){\r\n    rest.unshift('DEBUG')\r\n    this.log(rest)\r\n  }\r\n\r\n  info(...rest){\r\n    rest.unshift('INFO')\r\n    this.log(rest)\r\n  }\r\n\r\n  warn(...rest){\r\n    rest.unshift('WARN')\r\n    this.log(rest)\r\n  }\r\n\r\n  error(...rest){\r\n    rest.unshift('ERROR')\r\n    this.log(rest)\r\n  }\r\n\r\n  log(rest){\r\n    //if (!this.file){throw new Error('Logger aun no se ha configurado')}\r\n    //let rest = JSON.parse(JSON.stringify(rest1))\r\n    rest = this.filterLogger(rest)\r\n    //rest = this.nodemailer(rest)\r\n    const level = rest.shift()\r\n    const path = rest.shift()\r\n    if((this.break.length==0&&this.level<=LEVELS[level])||this.break.includes(path)||['ERROR', 'FATAL'].includes(level)){\r\n\t    const name = this.name.indexOf(']')>-1?this.name:'['+this.name+']'\r\n      //let tmp = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+name+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n      //let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')]\r\n      let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', ...rest]\r\n      if(this.console.display||['ERROR', 'FATAL'].includes(level)){\r\n        if(['ERROR', 'FATAL'].includes(level)){\r\n          this.console.error(...tmp)\r\n        }else if(['WARN'].includes(level)){\r\n          this.console.warn(...tmp)\r\n        }else{\r\n          this.console.log(...tmp)\r\n        }\r\n      }\r\n      if(this.file)  {\r\n        //tmp  = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+logger+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n        tmp.shift()\r\n        tmp = ['['+dayjs().format('HH:mm:ss')+']', ...tmp]\r\n        this.writeFile(this.file, tmp)\r\n      }\r\n    }\r\n  }\r\n\r\n  writeFile(fn, data){\r\n    const dir = fn.split(\"/\").slice(0, -1).join('/')\r\n    if (!fs.existsSync(dir)) fs.mkdirSync(dir, {recursive: true})\r\n    fs.appendFile(fn, data+'\\n', (err)=>{if (err){console.error('logger writeFile', err)}})\r\n\t}\r\n\r\n  static get levels(){\r\n    return LEVELS\r\n  }\r\n\r\n  /*nodemailer(rest){\r\n    if(typeof rest[1]=='object'){\r\n      let tmp = []\r\n      if(rest[2].indexOf('%s')>=0){\r\n        for(let x=3;x<rest.length;x++){\r\n          tmp.push(rest[x])\r\n        }\r\n        rest[2] = this.formatLog(rest[2], tmp)\r\n      }\r\n      tmp = [rest[0], 'nodemailer']\r\n      if(rest[1]?.sid){\r\n        tmp.push('['+rest[1]?.sid+']')\r\n      }\r\n      tmp.push(rest[2])\r\n      rest = tmp\r\n    }\r\n    return rest\r\n  }\r\n\r\n  formatLog(message, values){\r\n    const tmp = message.replace(/%[sd]/g, () => values.shift());\r\n    return tmp\r\n  }*/\r\n\r\n  filterLogger(rest){\r\n    for(let r=0;r<rest.length;r++){\r\n      if(rest[r]?.constructor?.name=='Logger'){\r\n        rest.splice(r, 1)\r\n      }else if(rest[r].logger){\r\n        delete rest[r].logger\r\n      }else if(rest[r].cert){\r\n        rest[r].cert = rest[r].cert.substring(0, 10)+'...'+rest[r].cert.substring(rest[r].cert.length-10)\r\n      }else if(rest[r].password){\r\n        rest[r].password = rest[r].password.replace(rest[r].password, '*')\r\n      }else if(rest[r].pass&&!this.hideSecrets){\r\n        rest[r].pass = rest[r].pass.replace(rest[r].pass, '*')\r\n      }else if(rest[r].clave&&!this.hideSecrets){\r\n        rest[r].clave = rest[r].clave.replace(rest[r].clave, '*')\r\n      }else if(rest[r].token&&!this.hideSecrets){\r\n        rest[r].token = rest[r].token.replace(rest[r].token, '*')\r\n      }else if(rest[r] instanceof Error){\r\n        rest[r] = rest[r].message+`\\nstack:`+rest[r].stack\r\n      }else if(typeof rest[r]=='object'){\r\n        rest[r] = JSON.stringify(rest[r])\r\n      }else if (Array.isArray(rest[r])){\r\n        rest[r] = rest[r].join(',')\r\n      }\r\n    }\r\n    return rest\r\n  }\r\n}\r\n\r\nexport function createLogger({file, name='my logger', displayConsole=false, level=LEVELS.TRACE}){\r\n  logger.config({file, name, displayConsole, level})\r\n}\r\nexport const logger = new Logger()\r\n"],"names":["LEVELS","TRACE","DEBUG","INFO","WARN","ERROR","OFF","Logger","this","level","console","file","name","hideSecrets","_proto","prototype","config","_ref","_ref$name","_ref$displayConsole","displayConsole","_ref$level","_ref$hideSecrets","display","log","error","addBreak","break_","push","info","setName","trace","rest","slice","call","arguments","unshift","debug","warn","filterLogger","shift","path","length","includes","_this$console","indexOf","tmp","dayjs","format","concat","apply","_this$console2","_this$console3","writeFile","fn","data","dir","split","join","fs","existsSync","mkdirSync","recursive","appendFile","err","r","_rest$r","constructor","splice","logger","cert","substring","password","replace","pass","clave","token","Error","message","stack","JSON","stringify","Array","isArray","key","get","_ref2","_ref2$name","_ref2$displayConsole","_ref2$level"],"mappings":"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"}