{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["import fs from 'fs'\r\nimport dayjs from 'dayjs'\r\n\r\nconst path = 'lib/logger'\r\n\r\nconst LEVELS ={TRACE:1, DEBUG:2, INFO:3, WARN:4, ERROR:5, OFF:99}//ALL < |TRACE < DEBUG < INFO < WARN < ERROR| < FATAL < MARK < OFF\r\n\r\nclass Logger{\r\n  break  =[]\r\n  level  =0\r\n  console={}\r\n  file   =false\r\n  name   =false\r\n  hideSecrets  =false\r\n\r\n  config({file, name='my logger', displayConsole=false, level=LEVELS.TRACE, hideSecrets=true}){\r\n    this.file   = file\r\n    this.name = name\r\n    this.console= {\r\n      display : displayConsole,\r\n      log     : console.log,\r\n      error   : console.error\r\n    }\r\n    this.level  = level\r\n    this.hideSecrets  = hideSecrets\r\n\t  //name = this\r\n  }\r\n\r\n  addBreak(break_){\r\n    this.break.push(break_)\r\n    this.info(path, 'addBreak', this.break)    \r\n  }\r\n\r\n  setName(name){\r\n    this.name = name\r\n  }\r\n\r\n  /*name(){\r\n    return this.file.substring(this.file.indexOf('data/')+5)\r\n  }*/\r\n\r\n  trace(...rest){\r\n    rest.unshift('TRACE')\r\n    this.log(rest)\r\n  }\r\n\r\n  debug(...rest){\r\n    rest.unshift('DEBUG')\r\n    this.log(rest)\r\n  }\r\n\r\n  info(...rest){\r\n    rest.unshift('INFO')\r\n    this.log(rest)\r\n  }\r\n\r\n  warn(...rest){\r\n    rest.unshift('WARN')\r\n    this.log(rest)\r\n  }\r\n\r\n  error(...rest){\r\n    rest.unshift('ERROR')\r\n    this.log(rest)\r\n  }\r\n\r\n  log(rest){\r\n    rest = this.filterLogger(rest)\r\n    //rest = this.nodemailer(rest)\r\n    const level = rest.shift()\r\n    const path = rest.shift()\r\n    if((this.break.length==0&&this.level<=LEVELS[level])||this.break.includes(path)||['ERROR', 'FATAL'].includes(level)){\r\n\t    const name = this.name.indexOf(']')>-1?this.name:'['+this.name+']'\r\n      ////let tmp = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+name+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n      ////let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')]\r\n      let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', ...rest]\r\n      if(this.console.display||['ERROR', 'FATAL'].includes(level)){\r\n        if(['ERROR', 'FATAL'].includes(level)){\r\n          this.console.error(...tmp)\r\n        }else if(['WARN'].includes(level)){\r\n          this.console.warn(...tmp)\r\n        }else{\r\n          this.console.log(...tmp)\r\n        }\r\n      }\r\n      if(this.file)  {\r\n        //tmp  = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+logger+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n        tmp.shift()\r\n        tmp = ['['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']', ...tmp]\r\n        this.writeFile(this.file, tmp)\r\n      }\r\n    }\r\n  }\r\n\r\n  writeFile(fn, data){\r\n    const dir = fn.split(\"/\").slice(0, -1).join('/')\r\n    if (!fs.existsSync(dir)) fs.mkdirSync(dir, {recursive: true})\r\n    fs.appendFile(fn, data+'\\n', (err)=>{if (err){console.error('logger writeFile', err)}})\r\n\t}\r\n\r\n  static get levels(){\r\n    return LEVELS\r\n  }\r\n\r\n  /*nodemailer(rest){\r\n    if(typeof rest[1]=='object'){\r\n      let tmp = []\r\n      if(rest[2].indexOf('%s')>=0){\r\n        for(let x=3;x<rest.length;x++){\r\n          tmp.push(rest[x])\r\n        }\r\n        rest[2] = this.formatLog(rest[2], tmp)\r\n      }\r\n      tmp = [rest[0], 'nodemailer']\r\n      if(rest[1]?.sid){\r\n        tmp.push('['+rest[1]?.sid+']')\r\n      }\r\n      tmp.push(rest[2])\r\n      rest = tmp\r\n    }\r\n    return rest\r\n  }\r\n\r\n  formatLog(message, values){\r\n    const tmp = message.replace(/%[sd]/g, () => values.shift());\r\n    return tmp\r\n  }*/\r\n\r\n  filterLogger(rest){\r\n    for(let r=0;r<rest.length;r++){\r\n      if(rest[r]?.constructor?.name=='Logger'){\r\n        rest.splice(r, 1)\r\n      }else if(rest[r].logger){\r\n        delete rest[r].logger\r\n      }else if(rest[r].cert){\r\n        rest[r].cert = rest[r].cert.substring(0, 10)+'...'+rest[r].cert.substring(rest[r].cert.length-10)\r\n      }else if(rest[r].password){\r\n        rest[r].password = rest[r].password.replace(rest[r].password, '*')\r\n      }else if(rest[r].pass&&!this.hideSecrets){\r\n        rest[r].pass = rest[r].pass.replace(rest[r].pass, '*')\r\n      }else if(rest[r].clave&&!this.hideSecrets){\r\n        rest[r].clave = rest[r].clave.replace(rest[r].clave, '*')\r\n      }else if(rest[r].token&&!this.hideSecrets){\r\n        rest[r].token = rest[r].token.replace(rest[r].token, '*')\r\n      }else if(rest[r] instanceof Error){\r\n        rest[r] = rest[r].message+`\\nstack:`+rest[r].stack\r\n      }else if(typeof rest[r]=='object'){\r\n        rest[r] = JSON.stringify(rest[r])\r\n      }else if (Array.isArray(rest[r])){\r\n        rest[r] = rest[r].join(',')\r\n      }\r\n    }\r\n    return rest\r\n  }\r\n}\r\n\r\nexport function createLogger({file, name='my logger', displayConsole=false, level=LEVELS.TRACE}){\r\n  logger.config({file, name, displayConsole, level})\r\n}\r\nexport const logger = new Logger()\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,mBAAkB;AAElB,IAAM,OAAO;AAEb,IAAM,SAAQ,EAAC,OAAM,GAAG,OAAM,GAAG,MAAK,GAAG,MAAK,GAAG,OAAM,GAAG,KAAI,GAAE;AAEhE,IAAM,SAAN,MAAY;AAAA,EACV,QAAQ,CAAC;AAAA,EACT,QAAQ;AAAA,EACR,UAAQ,CAAC;AAAA,EACT,OAAQ;AAAA,EACR,OAAQ;AAAA,EACR,cAAc;AAAA,EAEd,OAAO,EAAC,MAAM,OAAK,aAAa,iBAAe,OAAO,QAAM,OAAO,OAAO,cAAY,KAAI,GAAE;AAC1F,SAAK,OAAS;AACd,SAAK,OAAO;AACZ,SAAK,UAAS;AAAA,MACZ,SAAU;AAAA,MACV,KAAU,QAAQ;AAAA,MAClB,OAAU,QAAQ;AAAA,IACpB;AACA,SAAK,QAAS;AACd,SAAK,cAAe;AAAA,EAEtB;AAAA,EAEA,SAAS,QAAO;AACd,SAAK,MAAM,KAAK,MAAM;AACtB,SAAK,KAAK,MAAM,YAAY,KAAK,KAAK;AAAA,EACxC;AAAA,EAEA,QAAQ,MAAK;AACX,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,MAAK;AACZ,SAAK,QAAQ,OAAO;AACpB,SAAK,IAAI,IAAI;AAAA,EACf;AAAA,EAEA,SAAS,MAAK;AACZ,SAAK,QAAQ,OAAO;AACpB,SAAK,IAAI,IAAI;AAAA,EACf;AAAA,EAEA,QAAQ,MAAK;AACX,SAAK,QAAQ,MAAM;AACnB,SAAK,IAAI,IAAI;AAAA,EACf;AAAA,EAEA,QAAQ,MAAK;AACX,SAAK,QAAQ,MAAM;AACnB,SAAK,IAAI,IAAI;AAAA,EACf;AAAA,EAEA,SAAS,MAAK;AACZ,SAAK,QAAQ,OAAO;AACpB,SAAK,IAAI,IAAI;AAAA,EACf;AAAA,EAEA,IAAI,MAAK;AACP,WAAO,KAAK,aAAa,IAAI;AAE7B,UAAM,QAAQ,KAAK,MAAM;AACzB,UAAMA,QAAO,KAAK,MAAM;AACxB,QAAI,KAAK,MAAM,UAAQ,KAAG,KAAK,SAAO,OAAO,KAAK,KAAI,KAAK,MAAM,SAASA,KAAI,KAAG,CAAC,SAAS,OAAO,EAAE,SAAS,KAAK,GAAE;AACnH,YAAM,OAAO,KAAK,KAAK,QAAQ,GAAG,IAAE,KAAG,KAAK,OAAK,MAAI,KAAK,OAAK;AAG9D,UAAI,MAAM,CAAC,UAAI,aAAAC,SAAM,EAAE,OAAO,UAAU,IAAE,KAAI,MAAI,QAAM,KAAK,MAAM,MAAID,QAAK,KAAK,GAAG,IAAI;AACxF,UAAG,KAAK,QAAQ,WAAS,CAAC,SAAS,OAAO,EAAE,SAAS,KAAK,GAAE;AAC1D,YAAG,CAAC,SAAS,OAAO,EAAE,SAAS,KAAK,GAAE;AACpC,eAAK,QAAQ,MAAM,GAAG,GAAG;AAAA,QAC3B,WAAS,CAAC,MAAM,EAAE,SAAS,KAAK,GAAE;AAChC,eAAK,QAAQ,KAAK,GAAG,GAAG;AAAA,QAC1B,OAAK;AACH,eAAK,QAAQ,IAAI,GAAG,GAAG;AAAA,QACzB;AAAA,MACF;AACA,UAAG,KAAK,MAAO;AAEb,YAAI,MAAM;AACV,cAAM,CAAC,UAAI,aAAAC,SAAM,EAAE,OAAO,qBAAqB,IAAE,KAAK,GAAG,GAAG;AAC5D,aAAK,UAAU,KAAK,MAAM,GAAG;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,UAAU,IAAI,MAAK;AACjB,UAAM,MAAM,GAAG,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG;AAC/C,QAAI,CAAC,UAAAC,QAAG,WAAW,GAAG,EAAG,WAAAA,QAAG,UAAU,KAAK,EAAC,WAAW,KAAI,CAAC;AAC5D,cAAAA,QAAG,WAAW,IAAI,OAAK,MAAM,CAAC,QAAM;AAAC,UAAI,KAAI;AAAC,gBAAQ,MAAM,oBAAoB,GAAG;AAAA,MAAC;AAAA,IAAC,CAAC;AAAA,EACzF;AAAA,EAEC,WAAW,SAAQ;AACjB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BA,aAAa,MAAK;AAhIpB;AAiII,aAAQ,IAAE,GAAE,IAAE,KAAK,QAAO,KAAI;AAC5B,YAAG,gBAAK,CAAC,MAAN,mBAAS,gBAAT,mBAAsB,SAAM,UAAS;AACtC,aAAK,OAAO,GAAG,CAAC;AAAA,MAClB,WAAS,KAAK,CAAC,EAAE,QAAO;AACtB,eAAO,KAAK,CAAC,EAAE;AAAA,MACjB,WAAS,KAAK,CAAC,EAAE,MAAK;AACpB,aAAK,CAAC,EAAE,OAAO,KAAK,CAAC,EAAE,KAAK,UAAU,GAAG,EAAE,IAAE,QAAM,KAAK,CAAC,EAAE,KAAK,UAAU,KAAK,CAAC,EAAE,KAAK,SAAO,EAAE;AAAA,MAClG,WAAS,KAAK,CAAC,EAAE,UAAS;AACxB,aAAK,CAAC,EAAE,WAAW,KAAK,CAAC,EAAE,SAAS,QAAQ,KAAK,CAAC,EAAE,UAAU,GAAG;AAAA,MACnE,WAAS,KAAK,CAAC,EAAE,QAAM,CAAC,KAAK,aAAY;AACvC,aAAK,CAAC,EAAE,OAAO,KAAK,CAAC,EAAE,KAAK,QAAQ,KAAK,CAAC,EAAE,MAAM,GAAG;AAAA,MACvD,WAAS,KAAK,CAAC,EAAE,SAAO,CAAC,KAAK,aAAY;AACxC,aAAK,CAAC,EAAE,QAAQ,KAAK,CAAC,EAAE,MAAM,QAAQ,KAAK,CAAC,EAAE,OAAO,GAAG;AAAA,MAC1D,WAAS,KAAK,CAAC,EAAE,SAAO,CAAC,KAAK,aAAY;AACxC,aAAK,CAAC,EAAE,QAAQ,KAAK,CAAC,EAAE,MAAM,QAAQ,KAAK,CAAC,EAAE,OAAO,GAAG;AAAA,MAC1D,WAAS,KAAK,CAAC,aAAa,OAAM;AAChC,aAAK,CAAC,IAAI,KAAK,CAAC,EAAE,UAAQ;AAAA,UAAW,KAAK,CAAC,EAAE;AAAA,MAC/C,WAAS,OAAO,KAAK,CAAC,KAAG,UAAS;AAChC,aAAK,CAAC,IAAI,KAAK,UAAU,KAAK,CAAC,CAAC;AAAA,MAClC,WAAU,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAE;AAC/B,aAAK,CAAC,IAAI,KAAK,CAAC,EAAE,KAAK,GAAG;AAAA,MAC5B;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEO,SAAS,aAAa,EAAC,MAAM,OAAK,aAAa,iBAAe,OAAO,QAAM,OAAO,MAAK,GAAE;AAC9F,SAAO,OAAO,EAAC,MAAM,MAAM,gBAAgB,MAAK,CAAC;AACnD;AACO,IAAM,SAAS,IAAI,OAAO;",
  "names": ["path", "dayjs", "fs"]
}
