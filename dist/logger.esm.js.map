{"version":3,"file":"logger.esm.js","sources":["../src/index.js"],"sourcesContent":["import fs from 'fs'\r\nimport dayjs from 'dayjs'\r\n\r\nconst path = 'lib/logger'\r\n\r\nconst LEVELS ={TRACE:1, DEBUG:2, INFO:3, WARN:4, ERROR:5, OFF:99}//ALL < |TRACE < DEBUG < INFO < WARN < ERROR| < FATAL < MARK < OFF\r\n\r\nclass Logger{\r\n  break  =[]\r\n  level  =0\r\n  console={}\r\n  file   =false\r\n  name   =false\r\n  hideSecrets  =false\r\n\r\n  config({file, name='my logger', displayConsole=false, level=LEVELS.TRACE, hideSecrets=true}){\r\n    this.file   = file\r\n    this.name = name\r\n    this.console= {\r\n      display : displayConsole,\r\n      log     : console.log,\r\n      error   : console.error\r\n    }\r\n    this.level  = level\r\n    this.hideSecrets  = hideSecrets\r\n\t  //name = this\r\n  }\r\n\r\n  addBreak(break_){\r\n    this.break.push(break_)\r\n    this.info(path, 'addBreak', this.break)    \r\n  }\r\n\r\n  setName(name){\r\n    this.name = name\r\n  }\r\n\r\n  /*name(){\r\n    return this.file.substring(this.file.indexOf('data/')+5)\r\n  }*/\r\n\r\n  trace(...rest){\r\n    rest.unshift('TRACE')\r\n    this.log(rest)\r\n  }\r\n\r\n  debug(...rest){\r\n    rest.unshift('DEBUG')\r\n    this.log(rest)\r\n  }\r\n\r\n  info(...rest){\r\n    rest.unshift('INFO')\r\n    this.log(rest)\r\n  }\r\n\r\n  warn(...rest){\r\n    rest.unshift('WARN')\r\n    this.log(rest)\r\n  }\r\n\r\n  error(...rest){\r\n    rest.unshift('ERROR')\r\n    this.log(rest)\r\n  }\r\n\r\n  log(rest){\r\n    //if (!this.file){throw new Error('Logger aun no se ha configurado')}\r\n    //let rest = JSON.parse(JSON.stringify(rest1))\r\n    rest = this.filterLogger(rest)\r\n    //rest = this.nodemailer(rest)\r\n    const level = rest.shift()\r\n    const path = rest.shift()\r\n    if((this.break.length==0&&this.level<=LEVELS[level])||this.break.includes(path)||['ERROR', 'FATAL'].includes(level)){\r\n\t    const name = this.name.indexOf(']')>-1?this.name:'['+this.name+']'\r\n      //let tmp = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+name+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n      //let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')]\r\n      let tmp = ['['+dayjs().format('HH:mm:ss')+']','['+level+']', name, '['+path+']', ...rest]\r\n      if(this.console.display||['ERROR', 'FATAL'].includes(level)){\r\n        if(['ERROR', 'FATAL'].includes(level)){\r\n          this.console.error(...tmp)\r\n        }else if(['WARN'].includes(level)){\r\n          this.console.warn(...tmp)\r\n        }else{\r\n          this.console.log(...tmp)\r\n        }\r\n      }\r\n      if(this.file)  {\r\n        //tmp  = '['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']['+level+']'+logger+'['+path+'] - '+rest.map(r=>{return (typeof r=='string')?r:JSON.stringify(r)}).join(', ').replaceAll(`\\\\\"`, `\"`).replaceAll(`\\\\\\\\`, '')\r\n        tmp.shift()\r\n        tmp = ['['+dayjs().format('YYYY-MM-DD HH:mm:ss')+']', ...tmp]\r\n        this.writeFile(this.file, tmp)\r\n      }\r\n    }\r\n  }\r\n\r\n  writeFile(fn, data){\r\n    const dir = fn.split(\"/\").slice(0, -1).join('/')\r\n    if (!fs.existsSync(dir)) fs.mkdirSync(dir, {recursive: true})\r\n    fs.appendFile(fn, data+'\\n', (err)=>{if (err){console.error('logger writeFile', err)}})\r\n\t}\r\n\r\n  static get levels(){\r\n    return LEVELS\r\n  }\r\n\r\n  /*nodemailer(rest){\r\n    if(typeof rest[1]=='object'){\r\n      let tmp = []\r\n      if(rest[2].indexOf('%s')>=0){\r\n        for(let x=3;x<rest.length;x++){\r\n          tmp.push(rest[x])\r\n        }\r\n        rest[2] = this.formatLog(rest[2], tmp)\r\n      }\r\n      tmp = [rest[0], 'nodemailer']\r\n      if(rest[1]?.sid){\r\n        tmp.push('['+rest[1]?.sid+']')\r\n      }\r\n      tmp.push(rest[2])\r\n      rest = tmp\r\n    }\r\n    return rest\r\n  }\r\n\r\n  formatLog(message, values){\r\n    const tmp = message.replace(/%[sd]/g, () => values.shift());\r\n    return tmp\r\n  }*/\r\n\r\n  filterLogger(rest){\r\n    for(let r=0;r<rest.length;r++){\r\n      if(rest[r]?.constructor?.name=='Logger'){\r\n        rest.splice(r, 1)\r\n      }else if(rest[r].logger){\r\n        delete rest[r].logger\r\n      }else if(rest[r].cert){\r\n        rest[r].cert = rest[r].cert.substring(0, 10)+'...'+rest[r].cert.substring(rest[r].cert.length-10)\r\n      }else if(rest[r].password){\r\n        rest[r].password = rest[r].password.replace(rest[r].password, '*')\r\n      }else if(rest[r].pass&&!this.hideSecrets){\r\n        rest[r].pass = rest[r].pass.replace(rest[r].pass, '*')\r\n      }else if(rest[r].clave&&!this.hideSecrets){\r\n        rest[r].clave = rest[r].clave.replace(rest[r].clave, '*')\r\n      }else if(rest[r].token&&!this.hideSecrets){\r\n        rest[r].token = rest[r].token.replace(rest[r].token, '*')\r\n      }else if(rest[r] instanceof Error){\r\n        rest[r] = rest[r].message+`\\nstack:`+rest[r].stack\r\n      }else if(typeof rest[r]=='object'){\r\n        rest[r] = JSON.stringify(rest[r])\r\n      }else if (Array.isArray(rest[r])){\r\n        rest[r] = rest[r].join(',')\r\n      }\r\n    }\r\n    return rest\r\n  }\r\n}\r\n\r\nexport function createLogger({file, name='my logger', displayConsole=false, level=LEVELS.TRACE}){\r\n  logger.config({file, name, displayConsole, level})\r\n}\r\nexport const logger = new Logger()\r\n"],"names":["LEVELS","TRACE","DEBUG","INFO","WARN","ERROR","OFF","createLogger","_ref2","_ref2$name","name","_ref2$displayConsole","displayConsole","_ref2$level","level","logger","config","file","Logger","this","console","hideSecrets","_proto","prototype","_ref","_ref$name","_ref$displayConsole","_ref$level","_ref$hideSecrets","display","log","error","addBreak","break_","push","info","setName","trace","rest","slice","call","arguments","unshift","debug","warn","filterLogger","shift","path","length","includes","_this$console","indexOf","tmp","dayjs","format","concat","apply","_this$console2","_this$console3","writeFile","fn","data","dir","split","join","fs","existsSync","mkdirSync","recursive","appendFile","err","r","_rest$r","constructor","splice","cert","substring","password","replace","pass","clave","token","Error","message","stack","JSON","stringify","Array","isArray","key","get"],"mappings":"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"}